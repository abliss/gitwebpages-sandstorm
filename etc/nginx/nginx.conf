pid /var/run/nginx.pid;

worker_processes 2;

events {
    worker_connections  1024;
}

http {
 include       mime.types;
 default_type  application/octet-stream;

 access_log /var/log/nginx/access.log;
 error_log /var/log/nginx/error.log;

 sendfile        on;
 #tcp_nopush     on;

 keepalive_timeout  65;

  map $http_x_sandstorm_permissions $write_permission {
    default no;
    ~(.+,)*write(,.+)* yes;
  }

  map $http_x_sandstorm_permissions $read_permission {
    default no;
    ~(.+,)*read(,.+)* yes;
  }

  map $request_filename,$arg_service $is_write_request {
    default no;
    ~.*,git-receive-pack yes;
    ~/git-receive-pack.*,.* yes;
  }

  map $is_write_request,$write_permission $allow_git_request {
    default $read_permission;
    yes,yes yes;
    yes,no  no;
  }

 server {
  listen 10000;

  root /srv/http/gitweb;

   location ~ /repo.git(?<path_info>/.*) {

   if ($allow_git_request = no) {
     return 403;
   }

   client_max_body_size   1000M;
   include     fastcgi_params;
   fastcgi_param SCRIPT_FILENAME /usr/lib/git-core/git-http-backend;
   fastcgi_param GIT_HTTP_EXPORT_ALL "";
   fastcgi_param GIT_PROJECT_ROOT /var/repo.git;
   fastcgi_param PATH_INFO $path_info;
   fastcgi_pass  127.0.0.1:9000;
  }

  location / {
   index gitweb.cgi;
   include fastcgi_params;
   gzip off;
   fastcgi_param   GITWEB_CONFIG  /etc/conf.d/gitweb.conf;
   if ($uri ~ "/gitweb.cgi") {
      fastcgi_pass    127.0.0.1:9000;
   }
  }

  client_max_body_size 1000M;
}

}


